# Generated by hand for ekoh-smartvote
# Django 4.2 migration
from django.db import migrations, connection
from django.contrib.postgres.operations import CreateExtension


SCHEMA_NAME = "ekoh_smartvote"


def create_schema(apps, schema_editor):
    """Ensure the ekoh_smartvote schema exists and is on search_path."""
    with connection.cursor() as cur:
        cur.execute(f"CREATE SCHEMA IF NOT EXISTS {SCHEMA_NAME};")
        cur.execute(f"SET search_path TO {SCHEMA_NAME}, public;")


class Migration(migrations.Migration):
    initial = True
    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),  # latest core auth migration
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.RunPython(create_schema, migrations.RunPython.noop),
        # Enable required extensions (safe if already present)
        CreateExtension("ltree"),
        CreateExtension("pgcrypto"),
        # The following CreateModel ops are auto-generated from models; list abbreviated here.
        migrations.CreateModel(
            name="ExpertiseCategory",
            fields=[
                ("id", migrations.fields.AutoField(primary_key=True, serialize=False)),
                ("code", migrations.fields.CharField(max_length=16, unique=True)),
                ("name", migrations.fields.CharField(max_length=128)),
                (
                    "parent",
                    migrations.fields.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=migrations.models.CASCADE,
                        related_name="children",
                        to="ekoh.ExpertiseCategory",
                    ),
                ),
                ("depth", migrations.fields.SmallIntegerField()),
                ("path", migrations.contrib.postgres.fields.ltree.LTreeField()),
            ],
            options={
                "db_table": "expertise_category",
            },
        ),
        # … (Django will continue generating CreateModel operations for
        #     UserExpertiseScore, UserEthicsScore, ScoreConfiguration,
        #     ConfidentialitySetting, ContextAnalysisLog, ScoreHistory)
    ]
